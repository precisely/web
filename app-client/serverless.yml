service: precisely-react

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${self:custom.common.stage}
  region: ${self:custom.common.region}
  profile: ${self:custom.common.profile}
  deploymentBucket: ${self:custom.common.deploymentBucket}

  ## Environment for handlers
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    ACCOUNT_ID: ${self:custom.common.accountId}

    # REACT_APP_ env vars are made available to client-side React code;
    # Auth0 values - needed for verifying Auth0 tokens
    REACT_APP_AUTH0_DOMAIN: ${self:custom.common.auth0Tenant}.auth0.com # set in Auth0: dev-precisely, beta-precisely, prod-precisely
    REACT_APP_AUTH0_CLIENT_ID: ${self:custom.common.auth0ReactClientId}
    REACT_APP_GRAPHQL_ENDPOINT: ${self:custom.common.apiHost}/${self:custom.common.graphQLAPIPath}

resources:
  - Resources: ${file(./serverless/resources/s3-website-bucket.yml)}
  - Resources: ${file(./serverless/resources/cloudfront-distribution.yml)}
  - Resources: ${file(./serverless/resources/route53.yml)}

plugins:
  - serverless-finch
  - serverless-plugin-scripts

custom:
  common: ${file(../serverless/common.js):vars}

  vars:
    clientDomain: ${self:custom.common.baseDomain}
    cloudfrontOriginId: "${self:provider.stage}-cloudfront"
    reactS3BucketName: ${self:provider.stage}-reacts3.${self:custom.common.rootDomain}
    cloudfrontDefaultTTL: ${self:custom.vars.cloudfrontTTLMap.${self:custom.common.account}, self:custom.vars.cloudfrontTTLMap.default}
    cloudfrontTTLMap:
      dev: 60
      beta: 300
      default: 86400

  client:
    bucketName: ${self:custom.vars.reactS3BucketName}
    distributionFolder: build
    indexDocument: index.html
    errorDocument: index.html

  scripts:
    commands:
      console: ts-node -r tsconfig-paths/register
      static: node scripts/start.js
      build: node scripts/build.js -p
      