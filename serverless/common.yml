account: ${self:provider.vars.accountFromStage.${self:provider.stage}, self:provider.vars.accountFromStage.default}
accountId: "#{AWS::AccountId}"

# name of the AWS account (prod, stage or dev)
accountFromStage:
  beta: beta
  prod: prod
  offline: offline # Note: there is no AWS "offline" account
                    # This mapping exists to ensure no AWS resources are used when STAGE=offline
  default: dev

stage: ${opt:stage, env:STAGE, "dev"}
# default AWS config profile name (used locally)
defaultProfile: ${self:provider.vars.account}-profile-precisely

auth0TenantNameMap: 
  default: ${self:provider.vars.account}-precisely
  offline: dev-precisely

auth0TenantName: ${self:provider.vars.auth0TenantNameMap.${self:provider.vars.account}, self:provider.vars.auth0TenantNameMap.default}

# customDomain / Route53 config
domain: "${
    self:provider.vars.domainMap.${self:provider.vars.account},
    self:provider.vars.domainMap.default
}"
certificateName: "${self:provider.vars.certificateMap.${self:provider.stage},
                    self:provider.vars.certificateMap.default}"
certificateMap:
  prod: "*.precise.ly"
  default: "*.codeprecisely.net"


reactURL: ${self:provider.vars.reactURLMap.${self:provider.vars.account}, self:provider.vars.reactURLMap.default}
reactURLMap:
  offline: "http://${self:provider.vars.domain}:3000"
  default: "https://${self:provider.vars.domain}"
