#import "./user-data-map/api/schema.graphql"
#import "./genetics-service/api/schema.graphql"

type GenericResponse {
    success: Boolean,
    message: String
}

input LastEvaluatedKeyInput {
    dataTypeUserId: String
    gene: String
}

type Query {
    listUserDataMap(limit: Int, offset: Int): [UserDataMap],
    geneticsList(limit: Int, lastEvaluatedKeys: LastEvaluatedKeyInput, createdAt: String): GeneticsList,
    getGeneticsData(dataTypeUserId: String!, gene: String!): Genetics
}

type Mutation {
    findOrCreateUserDataMap(userId: String!, vendorDataType: String!): UserDataMap,
    updateGenetics(gene: String, source: String, variant: String, quality: String, dataTypeUserId: String!): Genetics,
    createGenetics(
            gene: String!,
            source: String!,
            variant: String!,
            quality: String,
            dataTypeUserId: String!
    ): Genetics,
}