service: precisely

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, env:STAGE, "dev"}
  region: ${opt:region, env:REGION, "us-east-1"}
  profile: ${opt:profile, env:PROFILE, self:provider.vars.defaultProfile}

  vars: # generated names and other work variables that can referred to throughout:
    # default AWS config profile name (used locally)
    defaultProfile: ${self:provider.vars.account}-profile-precisely
    # name of the AWS account (prod, stage or dev)
    account: ${self:provider.vars.nonDevAccounts.${self:provider.stage}, "dev"}
    nonDevAccounts:
      beta: beta
      prod: prod
    # resource names
    geneticsVCFBucket: ${self:provider.stage}-precisely-genetics-vcf
    genetics23andMeBucket: ${self:provider.stage}-precisely-genetics-23andme

  # environment for handlers (but not scripts in ./serverless!):
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}

    # Reflect these resources so they are available in code
    S3_BUCKETS: "S3_BUCKET_GENETICS_VCF,S3_BUCKET_GENETICS_23ANDME"
    S3_BUCKET_GENETICS_VCF: ${self:provider.vars.geneticsVCFBucket}
    S3_BUCKET_GENETICS_23ANDME: ${self:provider.vars.genetics23andMeBucket}

    # AUTH0_CLIENT_ID: ${self:custom.kmsSecrets.secrets.AUTH0_CLIENT_ID}
    # AUTH0_CLIENT_SECRET: ${self:custom.kmsSecrets.secrets.AUTH0_CLIENT_SECRET}
    # AUTH0_JWKS_URI: ${self:custom.kmsSecrets.secrets.AUTH0_JWKS_URI}

iamRoleStatements:
    - Effect: Allow
      Action: KMS:Decrypt
      Resource: ${self:custom.kmsSecrets.keyArn}

resources:
  - Resources: ${file(./serverless/resources/kms.yml)}
  - Resources: ${file(./serverless/resources/cors.yml)}
  - Resources: ${file(./serverless/resources/dynogels-tables.js)}
  - Resources: ${file(./serverless/resources/genetics-buckets.yml)}

plugins:
  - serverless-webpack
  - serverless-plugin-additional-stacks
  - serverless-kms-secrets
  #- serverless-cloudformation-sub-variables
  #- serverless-plugin-scripts
  #- serverless-offline

custom:
  dotenv:
    path: ../config/dev.env
  webpackIncludeModules: true
  # additionalStackResources:
  #   kmsResources: &kmsResources
  #     ${file(serverless/kms.yml)}
  # additionalStacks:
  #   AuthStack:
  #     Deploy: Before
  #     <<: *kmsResources
  serverless-kms-secrets:
    secretsFile: ../config/kms-secrets.${self:provider.stage}.${self:provider.region}.yml
  kmsSecrets: ${file(../config/kms-secrets.${self:provider.stage}.${self:provider.region}.yml

functions:
  UserAuthorizer:
    handler: src/services/auth/handlers.userAuthorizer
    cors: true

  # VCF ingester is triggered by new file in S3_BUCKET_GENETICS_VCF
  VCFIngester:
    handler: src/services/genetics-pipeline/handlers.vcfIngester
    events:
      - s3:
          bucket: GeneticsVCF
          event: s3:ObjectCreated:*

  GraphQLPlayground:
    handler: src/services/graphql/handlers.playgroundHandler
    events:
      - http:
          path: playground
          method: get
          cors: true
          authorizer: UserAuthorizer

  GraphQLAPI:
    handler: src/services/graphql/handlers.apiHandler
    events:
      - http:
          path: api
          method: post
          cors: true
          authorizer: UserAuthorizer

  GraphIQL:
    handler: src/services/graphql/handlers.graphiqlHandler
    events:
      - http:
          path: graphiql
          method: get
          cors: true
          authorizer: UserAuthorizer
