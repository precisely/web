service: precisely

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, env:DEVELOPER}
  region: ${opt:region, env:REGION, "us-east-1"}
  profile: ${self:provider.stage}-profile-precisely
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}

    # Reflect these resources so they are available in code
    S3_BUCKETS: "S3_BUCKET_GENETICS_VCF,S3_BUCKET_GENETICS_23ANDME"
    S3_BUCKET_GENETICS_VCF: ${self:provider.stage}-precisely-genetics-vcf
    S3_BUCKET_GENETICS_23ANDME: ${self:provider.stage}-precisely-genetics-23andme

  # global role used by all lambda functions
  # iamRoleStatements: # Additions to AWSLambdaVPCAccessExecutionRole
  #   -  Effect: "Allow"
  #      Action:
  #        - "s3:GetObject"
  #      Resource: "*"
  #   - Effect: Allow
  #     Action:
  #       - KMS:Decrypt
  #     Resource: ${self:custom.kmsSecrets.keyArn}
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:*
  #       - dynamodb:Query
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:BatchGetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #       - dynamodb:DeleteItem
  #     Resource: "arn:aws:dynamodb:us-east-1:*:table/${self:provider.stage}-*"

plugins:
  - serverless-webpack
  - serverless-plugin-scripts
  - serverless-offline
  - serverless-plugin-additional-stacks
  - serverless-cloudformation-sub-variables

custom:
  dotenv:
    path: ../config/dev.env
  serverless-offline:
    port: 4000
  webpackIncludeModules: true
  dynamodb: # local dynamodb settings
    start:
      port: 8000
      inMemory: true
      migrate: true
  dynogelsTables: &dynogelsTables
    ${file(./serverless/dynogels-tables.js)}

  additionalStackResources:
    cognitoResources: &cognitoResources
      ${file(serverless/cognito.yml)}
  additionalStacks:
    AuthStack:
      Deploy: Before
      <<: *cognitoResources

functions:
  ingester:
    handler: src/services/genetics-pipeline/lambdas.vcfIngester
    events:
      - s3:
          bucket: ${self:provider.stage}-precisely-genetics-vcf
          event: s3:ObjectCreated:*
  playground:
    handler: src/services/graphql/lambdas.playgroundHandler
    events:
      - http:
          path: playground
          method: get
          cors: true
  graphql:
    handler: src/services/graphql/lambdas.apiHandler
    events:
      - http:
          path: api
          method: post
          cors: true
          authorizer:
            arn:
              FN::GetAtt: [CognitoUserPool, Arn]
  graphiql:
    handler: src/services/graphql/lambdas.graphiqlHandler
    events:
      - http:
          path: graphiql
          method: get
          cors: true
