---
# used by roles.yml, not included directly
DefaultPolicy:
  PolicyName: PreciselyDefaultPolicy
  PolicyDocument:
    Version: '2012-10-17'
    Statement:
      - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
        Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
        Resource:
          - Fn::Join:
            - ':'
            - - arn:aws:logs
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - log-group:/aws/lambda/*:*:*

APIPolicy:
  PolicyName: ${self:provider.stage}-PreciselyAPIPolicy
  PolicyDocument:
    Version: '2012-10-17'
    Statement:
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.Report.read}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.Report.write}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.VariantCall.read}

PreciselyDataManagerPolicy:
  PolicyName: ${self:provider.stage}-PreciselyDataManagerPolicy
  PolicyDocument:
    Version: '2012-10-17'
    Statement:
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.Report.read}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.Report.write}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.SystemVariantRequirement.read}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.SystemVariantRequirement.write}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.VariantCall.read}
      - ${file(./serverless/resources/dynogels-tables.js):Permissions.VariantCall.write}

ECSPolicy:
  PolicyName: ${self:provider.stage}-PreciselyECSPolicy
  PolicyDocument:
    Version: '2012-10-17'
    Statement:
      - Effect: Allow
        Action:
          - ecs:RunTask
        Resource:
          - '*'
      - Effect: Allow
        Action:
          - iam:PassRole
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:iam::"
              - ${self:custom.common.accountId}
              - ":role/${self:provider.stage}-PreciselySystemRole"

UserUploadS3Policy:
  PolicyName: ${self:provider.stage}-PreciselyUserUploadS3Policy
  PolicyDocument:
    Version: '2012-10-17'
    Statement:
      - Effect: Allow
        Action:
          - s3:AbortMultipartUpload
          - s3:PutObject
        Resource: 
          # presigned URL permission requires bucket & object access
          - arn:aws:s3:::${self:custom.vars.bioinformaticsUploadBucket}
          - arn:aws:s3:::${self:custom.vars.bioinformaticsUploadBucket}/*
...
