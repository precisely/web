---
PreciselyDefaultRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:provider.stage}-PreciselyDefaultRole
    AssumeRolePolicyDocument: &DefaultAssumeRolePolicyDocument
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - apigateway.amazonaws.com
              - lambda.amazonaws.com
          Action: sts:AssumeRole
    # note that these rights are needed if you want your function to be able to communicate with resources within your vpc
    ManagedPolicyArns: &DefaultManagedPolicyArns
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Policies:
      - ${file(./serverless/resources/role-policies.yml):PreciselyDefaultPolicy}
PreciselyGraphQLAPIRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:provider.stage}-PreciselyGraphQLAPIRole
    AssumeRolePolicyDocument: *DefaultAssumeRolePolicyDocument
    ManagedPolicyArns: *DefaultManagedPolicyArns
    Policies:
      - ${file(./serverless/resources/role-policies.yml):PreciselyDefaultPolicy}
      - ${file(./serverless/resources/role-policies.yml):PreciselyAPIPolicy}

IngestionECSTaskRole:
  Type: AWS::IAM::Role 
  Properties: 
    RoleName: ${self:provider.stage}-IngestionECSTaskRole
    AssumeRolePolicyDocument: 
      <<: *DefaultAssumeRolePolicyDocument
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Policies:
      - ${file(./serverless/resources/role-policies.yml):IngestionECSTaskPolicy}

RawUploadLambdaRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:provider.stage}-RawUploadLambdaRole
    AssumeRolePolicyDocument: *DefaultAssumeRolePolicyDocument
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Policies:
      - ${file(./serverless/resources/role-policies.yml):RawUploadLambdaPolicy}

...